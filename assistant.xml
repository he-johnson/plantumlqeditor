<?xml version="1.0"?>
<!--
    1. Don't add @start... or @end... .
    2. Use temp. @startuml notation and use ditaa/jcckit/digraph/graph in the first line.

	<assistants>
		<assistant name="Assistant Name">
		    <item name="Item Name 1"><![CDATA[
		    ]]></item>
		    <item name="Item Name 2"><![CDATA[
			    <notes>Optional notes</notes>
		    </item>
	    </assistants>
    </assistants>
-->
<assistants>
  <assistant name="Class Diagrams">
    <item name="TEST"><![CDATA[
      class Test1
      Test1 -> Test2
      Test2 -> Test3
      Test2 <-- Test3
      Test1 <-- Test2
      ]]>
      <notes>A first simple example!</notes>
    </item>
    <item name="Relations"><![CDATA[
    Class01 <|-- Class02
    Class03 *-- Class04
    Class05 o-- Class06
    Class07 .. Class08
    Class09 -- Class10
    Class11 <|.. Class12
    Class13 --> Class14
    Class15 ..> Class16
    Class17 ..|> Class18
    Class19 <--* Class20
    ]]></item>
    <item name="Label on relations"><![CDATA[
    Class01 "1" *-- "many" Class02 : contains

    Class03 o-- Class04 : agregation

    Class05 --> "1" Class06
    ]]>
    <notes><![CDATA[
    <ul>
    <li>To add a label, use <b>":"</b>, followed by the text of the label.
    <li>For cardinality, you can use double-quotes <b>""</b> on each side of the relation.
    </ul>
    ]]></notes>
    </item>
    <item name="Directed labels on relations"><![CDATA[
    class Car

    Driver - Car : drives >
    Car *- Wheel : have 4 >
    Car -- Person : < owns
    ]]></item>
    <item name="Adding methods"><![CDATA[
    Object <|-- ArrayList

    Object : equals()
    ArrayList : Object[] elementData
    ArrayList : size()
    ]]></item>
    <item name="Adding methods with brackets"><![CDATA[
    class Dummy {
    String data
    void methods()
    }
    ]]></item>
    <item name="Defining visibility"><![CDATA[
    class Dummy {
    -field1
    #field2
    ~method1()
    +method2()
    }
    ]]></item>
    <item name="Defining unskinned visibility"><![CDATA[
    skinparam classAttributeIconSize 0

    class Dummy {
    -field1
    #field2
    ~method1()
    +method2()
    }
    ]]></item>
    <item name="Abstract and static"><![CDATA[
    class Dummy {
    {static} String id
    {abstract} void methods()
    }
    ]]></item>
    <item name="Advanced class body"><![CDATA[
    class Foo1 {
    You can use
    several lines
    ..
    as you want
    and group
    ==
    things together.
    __
    You can have as many groups
    as you want
    --
    End of class
    }

    class User {
    .. Simple Getter ..
    + getName()
    + getAddress()
    .. Some setter ..
    + setName()
    __ private data __
    int age
    -- crypted --
    String password
    }
    ]]></item>
    <item name="Notes and stereotypes"><![CDATA[
    class Object << general >>
    Object <|--- ArrayList

    note top of Object : In java, every class\nextends this one.

    note "This is a floating note" as N1
    note "This note is connected\nto several objects." as N2
    Object .. N2
    N2 .. ArrayList

    class Foo
    note left: On last defined class
    ]]></item>
    <item name="More on notes"><![CDATA[
    class Foo
    note left: On last defined class

    note top of Object
    In java, <size:18>every</size> <u>class</u>
    <b>extends</b>
    <i>this</i> one.
    end note

    note as N1
    This note is <u>also</u>
    <b><color:royalBlue>on several</color>
    <s>words</s> lines
    And this is hosted by <img:sourceforge.jpg>
    end note
    ]]></item>
    <item name="Note on links"><![CDATA[
    class Dummy
    Dummy --> Foo : A link
    note on link #red: note that is red

    Dummy --> Foo2 : Another link
    note right on link #blue
    this is my note on right link
    and in blue
    end note
    ]]></item>
    <item name="Abstract class and interface"><![CDATA[
    abstract class AbstractList
    abstract AbstractCollection
    interface List
    interface Collection

    List <|-- AbstractList
    Collection <|-- AbstractCollection

    Collection <|- List
    AbstractCollection <|- AbstractList
    AbstractList <|-- ArrayList

    class ArrayList {
    Object[] elementData
    size()
    }

    enum TimeUnit {
    DAYS
    HOURS
    MINUTES
    }
    ]]></item>
    <item name="Using non-letters"><![CDATA[
    class "This is my class" as class1
    class class2 as "It works this way too"

    class2 *-- "foo/dummy" : use
    ]]></item>
    <item name="Hide stuff"><![CDATA[
    class Dummy1 {
    +myMethods()
    }

    class Dummy2 {
    +hiddenMethod()
    }

    class Dummy3 <<Serializable>> {
        String name
    }

    hide members
    hide <<Serializable>> circle
    show Dummy1 method
    show <<Serializable>> fields
    ]]></item>
    <item name="Use generics"><![CDATA[
    class Foo<? extends Element> {
        int size()
    }
    Foo *- Element
    ]]></item>
    <item name="Specific spot"><![CDATA[
    class System << (S,#FF7700) Singleton >>
    class Date << (D,orchid) >>
    ]]></item>
    <item name="Packages"><![CDATA[
    package "Classic Collections" #DDDDDD {
        Object <|-- ArrayList
    }

    package net.sourceforge.plantuml {
        Object <|-- Demo1
        Demo1 *- Demo2
    }
    ]]></item>
    <item name="Packages styles"><![CDATA[
    package foo1 <<Node>> {
        class Class1
    }

    package foo2 <<Rect>> {
        class Class2
    }

    package foo3 <<Folder>> {
        class Class3
    }

    package foo4 <<Frame>> {
        class Class4
    }

    package foo5 <<Cloud>> {
        class Class5
    }

    package foo6 <<Database>> {
        class Class6
    }
    ]]></item>
    <item name="Links between packages"><![CDATA[
    skinparam packageStyle rect

    package foo1.foo2 {
    }

    package foo1.foo2.foo3 {
        class Object
    }

    foo1.foo2 +-- foo1.foo2.foo3
    ]]></item>
    <item name="Namespaces"><![CDATA[
    class BaseClass

    namespace net.dummy #DDDDDD {
        .BaseClass <|-- Person
        Meeting o-- Person

        .BaseClass <|- Meeting
    }

    namespace net.foo {
        net.dummy.Person  <|- Person
        .BaseClass <|-- Person

        net.dummy.Meeting o-- Person
    }

    BaseClass <|-- net.unused.Person
    ]]></item>
    <item name="Lollipop interface"><![CDATA[
    class foo
    bar ()- foo
    ]]></item>
    <item name="Changing arrows direction 1"><![CDATA[
    Room o- Studient
    Room *-- Chair
    ]]></item>
    <item name="Changing arrows direction 2"><![CDATA[
    Studient -o Room
    Chair --* Room
    ]]></item>
    <item name="Changing arrows direction 3"><![CDATA[
    foo -left-> dummyLeft
    foo -right-> dummyRight
    foo -up-> dummyUp
    foo -down-> dummyDown
    ]]></item>
    <item name="Title"><![CDATA[
    title Simple <b>example</b>\nof title

    Object <|-- ArrayList
    ]]></item>
    <item name="Association classes 1"><![CDATA[
    class Student {
        Name
    }
    Student "0..*" - "1..*" Course
    (Student, Course) .. Enrollment

    class Enrollment {
        drop()
        cancel()
    }
    ]]></item>
    <item name="Association classes 2"><![CDATA[

    class Student {
        Name
    }
    Student "0..*" -- "1..*" Course
    (Student, Course) . Enrollment

    class Enrollment {
        drop()
        cancel()
    }
    ]]></item>
    <item name="Skinparam"><![CDATA[
    skinparam class {
        BackgroundColor PaleGreen
        ArrowColor SeaGreen
        BorderColor SpringGreen
    }
    skinparam stereotypeCBackgroundColor YellowGreen

    Class01 "1" *-- "many" Class02 : contains

    Class03 o-- Class04 : agregation
    ]]></item>
  </assistant>
  <assistant name="Sequence Diagrams">
    <item name="Simple sequence"><![CDATA[
    skinparam sequenceArrowThickness 2
    skinparam maxmessagesize 80
    'skinparam roundcorner 20
    'skinparam sequenceParticipant underline

    Alice -> Bob: Authentication Request
    Bob --> Alice: Authentication Response

    Alice -> Bob: Another authentication Request
    Alice <-- Bob: another authentication Response
    ]]></item>
    <item name="Declaring a participant"><![CDATA[
    actor Bob #red
    ' The only difference between actor and participant is the drawing
    participant Alice
    participant "I have a really\nlong name" as L #99FF99
    /' You can also declare:
    participant L as "I have a really\nlong name"  #99FF99
    '/

    Alice->Bob: Authentication Request
    Bob->Alice: Authentication Response
    Bob->L: Log transaction
      ]]></item>
    <item name="Message to Self"><![CDATA[
    Alice->Alice: This is a signal to self.\nIt also demonstrates\nmultiline \ntext
    ]]></item>
    <item name="Change arrow style"><![CDATA[
    Bob -> Alice
    Bob ->> Alice
    Bob -\ Alice
    Bob \\- Alice
    Bob //-- Alice
    Bob ->o Alice
    Bob o\\-- Alice
    ...
    [-> Bob
    [o-> Bob
    [o->o Bob
    [x-> Bob
    [<- Bob
    [x<- Bob
    ...
    Alice ->]
    Alice ->o]
    Alice o->o]
    Alice ->x]
    Alice <-]
    Alice x<-]
    ]]></item>
    <item name="Message sequence numbering"><![CDATA[
    autonumber

    Bob -> Alice : Authentication Request
    Bob <- Alice : Authentication Response
    ]]></item>
    <item name="Message sequence numbering with a start"><![CDATA[
    autonumber

    Bob -> Alice : Authentication Request
    Bob <- Alice : Authentication Response

    autonumber 15
    Bob -> Alice : Another authentication Request
    Bob <- Alice : Another authentication Response

    autonumber 40 10
    Bob -> Alice : Yet another authentication Request
    Bob <- Alice : Yet another authentication Response
    ]]></item>
    <item name="Formatted message sequence numbering"><![CDATA[
    autonumber "<b>[000]"

    Bob -> Alice : Authentication Request
    Bob <- Alice : Authentication Response

    autonumber 15 "<b>(<u>##</u>)"
    Bob -> Alice : Another authentication Request
    Bob <- Alice : Another authentication Response

    autonumber 40 10 "<font color=red><b>Message 0  "
    Bob -> Alice : Yet another authentication Request
    Bob <- Alice : Yet another authentication Response
    ]]></item>
    <item name="Title"><![CDATA[
    title Simple communication example

    Alice -> Bob: Authentication Request
    Bob --> Alice: Authentication Response
    ]]></item>
    <item name="Grouping message"><![CDATA[
    Alice -> Bob: Authentication Request

    alt successful case

        Bob -> Alice: Authentication Accepted

    else some kind of failure

        Bob -> Alice: Authentication Failure
        group My own label
            Alice -> Log : Log attack start
            loop 1000 times
                Alice -> Bob: DNS Attack
            end
            Alice -> Log : Log attack end
        end

    else Another type of failure

        Bob -> Alice: Please repeat

    end
    ]]></item>
    <item name="Notes on messages"><![CDATA[
    Alice->Bob : hello
    note left: this is a first note

    Bob->Alice : ok
    note right: this is another note

    Bob->Bob : I am thinking
    note left
      a note
      can also be defined
      on several lines
    end note
    ]]></item>
    <item name="Some other notes"><![CDATA[
    participant Alice
    participant Bob

    note left of Alice #aqua
      This is displayed
      left of Alice.
    end note

    note right of Alice: This is displayed right of Alice.

    note over Alice: This is displayed over Alice.

    note over Alice, Bob #FFAAAA: This is displayed\n over Bob and Alice.

    note over Bob, Alice
      This is yet another
      example of
      a long note.
    end note
    ]]></item>
    <item name="Divider"><![CDATA[
    == Initialisation ==

    Alice -> Bob: Authentication Request
    Bob --> Alice: Authentication Response

    == Repetition ==

    Alice -> Bob: Another authentication Request
    Alice <-- Bob: another authentication Response
    ]]></item>
    <item name="Space"><![CDATA[
    Alice -> Bob: message 1
    Bob --> Alice: ok
    |||
    Alice -> Bob: message 2
    Bob --> Alice: ok
    ||45||
    Alice -> Bob: message 3
    Bob --> Alice: ok
    ]]></item>
    <item name="Lifeline activation and destruction"><![CDATA[
    participant User

    User -> A: DoWork
    activate A

    A -> B: << createRequest >>
    activate B

    B -> C: DoWork
    activate C
    C --> B: WorkDone
    destroy C

    B --> A: RequestCreated
    deactivate B

    A -> User: Done
    deactivate A
    ]]></item>
    <item name="Nested lifeline activation and destruction"><![CDATA[
    participant User

    User -> A: DoWork
    activate A #FFBBBB

    A -> A: Internal call
    activate A #DarkSalmon

    A -> B: << createRequest >>
    activate B

    B --> A: RequestCreated
    deactivate B
    deactivate A
    A -> User: Done
    deactivate A
    ]]></item>
    <item name="Participant creation"><![CDATA[
    Bob -> Alice : hello

    create Other
    Alice -> Other : new

    create String
    Alice -> String
    note right : You can also put notes!

    Alice --> Bob : ok
    ]]></item>
    <item name="Incomming and outgoing messages"><![CDATA[
    [-> A: DoWork

    activate A

    A -> A: Internal call
    activate A

    A ->] : << createRequest >>

    A<--] : RequestCreated
    deactivate A
    [<- A: Done
    deactivate A
    ]]></item>
    <item name="Stereotypes and spots"><![CDATA[
    participant "Famous Bob" as Bob << Generated >>
    participant Alice << (C,#ADD1B2) Testable >>

    Bob->Alice: First message
    ]]></item>
    <item name="Participants englober"><![CDATA[
    box "Internal Service" #LightBlue
      participant Bob
      participant Alice
    end box
    participant Other

    Bob -> Alice : hello
    Alice -> Other : hello
    ]]></item>
    <item name="Link with Tooltip"><![CDATA[
    ' SVG only: Link with Tooltip on message
    Alice -> Bob : [[http://www.yahoo.com{Jason: {"firstName":"Bob", "lastName":"Smith"}}]] hello
    ]]></item>

    <item name="Removing footer"><![CDATA[
    hide footbox
    title Footer removed

    Alice -> Bob: Authentication Request
    Bob --> Alice: Authentication Response
    ]]></item>
  </assistant>
  <assistant name="Use Case Diagrams">
    <item name="Usecases"><![CDATA[
    (First usecase)
    (Another usecase) as (UC2)
    usecase UC3
    usecase (Last\nusecase) as UC4
    ]]></item>
    <item name="Actors"><![CDATA[
    :First Actor:
    :Another\nactor: as Men2
    actor Men3
    actor :Last actor: as Men4
    ]]></item>
    <item name="Basic example"><![CDATA[
    User -> (Start)
    User --> (Use the application) : A small label

    :Main Admin: ---> (Use the application) : This is\nyet another\nlabel
    ]]></item>
    <item name="Extension"><![CDATA[
    :Main Admin: as Admin
    (Use the application) as (Use)

    User <|-- Admin
    (Start) <|-- (Use)
    ]]></item>
    <item name="Using notes"><![CDATA[
    :Main Admin: as Admin
    (Use the application) as (Use)

    User -> (Start)
    User --> (Use)

    Admin ---> (Use)

    note right of Admin : This is an example.

    note right of (Use)
    A note can also
    be on several lines
    end note

    note "This note is connected\nto several objects." as N2
    (Start) .. N2
    N2 .. (Use)
    ]]></item>
    <item name="Stereotypes"><![CDATA[
    User << Human >>
    :Main Database: as MySql << Application >>
    (Start) << One Shot >>
    (Use the application) as (Use) << Main >>

    User -> (Start)
    User --> (Use)

    MySql --> (Use)
    ]]></item>
    <item name="Changing arrows direction 1"><![CDATA[
    :user: --> (Use case 1)
    :user: -> (Use case 2)
    ]]></item>
    <item name="Changing arrows direction 2"><![CDATA[
    (Use case 1) <.. :user:
    (Use case 2) <- :user:
    ]]></item>
    <item name="Changing arrows direction 3"><![CDATA[
    :user: -left-> (dummyLeft)
    :user: -right-> (dummyRight)
    :user: -up-> (dummyUp)
    :user: -down-> (dummyDown)
    ]]></item>
    <item name="Title"><![CDATA[
    title Simple <b>Usecase</b>\nwith one actor

    usecase (Use the application) as (Use)
    User -> (Use)
    ]]></item>
    <item name="Top to bottom direction"><![CDATA[
    'default
    top to bottom direction

    user1 --> (Usecase 1)
    user2 --> (Usecase 2)
    ]]></item>
    <item name="Left to right direction"><![CDATA[
    left to right direction

    user1 --> (Usecase 1)
    user2 --> (Usecase 2)
    ]]></item>
    <item name="Complete example"><![CDATA[
    left to right direction
    skinparam packageStyle rect

    actor customer
    actor clerk
    package checkout {
    customer -- (checkout)
    (checkout) .> (payment) : <>
    (help) .> (checkout) : <>
    (checkout) -- clerk
    }
    ]]></item>
  </assistant>
  <assistant name="Component Diagram">
    <item name="Components"><![CDATA[
    [First component]
    [Another component] as Comp2
    component Comp3
    component [Last\ncomponent] as Comp4
    ]]></item>
    <item name="Interfaces"><![CDATA[
    () "First Interface"
    () "Another interface" as Interf2
    interface Interf3
    interface "Last\ninterface" as Interf4
    ]]></item>
    <item name="Basic Example"><![CDATA[
    DataAccess - [First Component]
    [First Component] ..> HTTP : use
    ]]></item>
    <item name="Using notes"><![CDATA[
    interface "Data Access" as DA

    DA - [First Component]
    [First Component] ..> HTTP : use

    note left of HTTP : Web Service only

    note right of [First Component]
    A note can also
    be on several lines
    end note
    ]]></item>
    <item name="Grouping Components"><![CDATA[
    package "Some Group" {
        HTTP - [First Component]
        [Another Component]
    }

    node "Other Groups" {
        FTP - [Second Component]
        [First Component] --> FTP
    }

    cloud {
        [Example 1]
    }

    database "MySql" {
        folder "This is my folder" {
            [Folder 3]
        }
        frame "Foo" {
            [Frame 4]
        }
    }

    [Another Component] --> [Example 1]
    [Example 1] --> [Folder 3]
    [Folder 3] --> [Frame 4]
    ]]></item>
    <item name="Changing arrows direction 1"><![CDATA[
    [Component] --> Interface1
    [Component] -> Interface2
    ]]></item>
    <item name="Changing arrows direction 2"><![CDATA[
    Interface1 <-- [Component]
    Interface2 <- [Component]
    ]]></item>
    <item name="Changing arrows direction 3"><![CDATA[
    [Component] -left-> left
    [Component] -right-> right
    [Component] -up-> up
    [Component] -down-> down
    ]]></item>
    <item name="Title the diagram"><![CDATA[
    title Very simple component\ndiagram

    interface "Data Access" as DA

    DA - [First Component]
    [First Component] ..> HTTP : use
    ]]></item>
    <item name="Use UML2 notation"><![CDATA[
    skinparam componentStyle uml2

    interface "Data Access" as DA

    DA - [First Component]
    [First Component] ..> HTTP : use
    ]]></item>
	<item name="Deployment Diagram"><![CDATA[
    artifact artifact
    actor actor
    folder folder
    node node
    frame frame
    cloud cloud
    database database
    storage storage
    agent agent
    usecase usecase
    component component
    boundary boundary
    control control
    entity entity
    interface interface
	]]></item>
    <item name="Linking 1"><![CDATA[
    node node1
    node node2
    node node3
    node node4
    node node5
    node1 -- node2
    node1 .. node3
    node1 ~~ node4
    node1 == node5
	]]></item>
    <item name="Linking 2"><![CDATA[
    artifact artifact1
    artifact artifact2
    artifact artifact3
    artifact artifact4
    artifact artifact5
    artifact artifact6
    artifact artifact7
    artifact artifact8
    artifact artifact9
    artifact artifact10
    artifact1 --> artifact2
    artifact1 --* artifact3
    artifact1 --o artifact4
    artifact1 --+ artifact5
    artifact1 --# artifact6
    artifact1 -->> artifact7
    artifact1 --0 artifact8
    artifact1 --^ artifact9
    artifact1 --(0 artifact10
	]]></item>
    <item name="Linking 3"><![CDATA[
	cloud cloud1
	cloud cloud2
	cloud cloud3
	cloud cloud4
	cloud cloud5
	cloud1 -0- cloud2
	cloud1 -0)- cloud3
	cloud1 -(0- cloud4
	cloud1 -(0)- cloud5
	]]></item>
    <item name="Packages"><![CDATA[
    artifact FooA1 {
      folder FooA2
    }

    folder FooA3 {
      artifact FooA4
    }

    frame FooA5 {
      database FooA6
    }

    node FooB1 {
     cloud FooB2
    }

    cloud FooB3 {
      frame FooB4
    }

    database FooB5  {
      storage FooB6
    }

    storage FooB7 {
      storage FooB8
    }
	]]></item>
    <item name="Separators"><![CDATA[
    folder folder [
    This is an <b>folder
    ----
    You can use separator
    ====
    of different kind
    ....
    and style
    ]

    node node [
    This is a <b>node
    ----
    You can use separator
    ====
    of different kind
    ....
    and style
    ]

    database database [
    This is a <b>database
    ----
    You can use separator
    ====
    of different kind
    ....
    and style
    ]

    usecase usecase [
    This is a <b>usecase
    ----
    You can use separator
    ====
    of different kind
    ....
    and style
    ]
	]]></item>
    <item name="Skinparam 1"><![CDATA[
		skinparam component {
        FontSize 13
        InterfaceBackgroundColor RosyBrown
        InterfaceBorderColor orange
        BackgroundColor<<Apache>> Red
        BorderColor<<Apache>> #FF6655
        FontName Courier
        BorderColor black
        BackgroundColor gold
        ArrowFontName Impact
        ArrowColor #FF6655
        ArrowFontColor #777777
    }

    () "Data Access" as DA

    DA - [First Component]
    [First Component] ..> () HTTP : use
    HTTP - [Web Server] << Apache >>
    ]]></item>
    <item name="Skinparam 2"><![CDATA[
    [AA] <<static lib>>
    [BB] <<shared lib>>
    [CC] <<static lib>>

    node node1
    node node2 <<shared node>>
    database Production

    skinparam component {
    backgroundColor<<static lib>> DarkKhaki
    backgroundColor<<shared lib>> Green
    }

    skinparam node {
        borderColor Green
        backgroundColor Yellow
        backgroundColor<<shared node>> Magenta
    }
    skinparam databaseBackgroundColor Aqua
    ]]></item>
    <item name="Colored components"><![CDATA[
        @startuml
        hide stereotype
        skinparam component {
            backgroundColor<<1>> Pink
            backgroundColor<<2>> Green
            FontColor<<1>> White
            FontColor<<2>> Black
        }

        package "SYSTEM1" {

        [ComponentBox] <<1>>
        [AnotherCompBox] <<2>>
        @enduml
    ]]></item>
  </assistant>
  <assistant name="Activity Diagram">
    <item name="Simple Activity"><![CDATA[
    :Hello world;
    :This is on defined on
    several **lines**;
    ]]></item>
    <item name="Start Stop"><![CDATA[
    start
    :Hello world;
    :This is on defined on
    several **lines**;
    stop
    ]]></item>
    <item name="Conditional 1"><![CDATA[
    start

    if (Graphviz installed?) then (yes)
    :process all\ndiagrams;
    else (no)
    :process only
    __sequence__ and __activity__ diagrams;
    endif

    stop
    ]]></item>
    <item name="Conditional 2"><![CDATA[
    start
    if (condition A) then (yes)
        :Text 1;
    elseif (condition B) then (yes)
        :Text 2;
    stop
    elseif (condition C) then (yes)
        :Text 3;
    elseif (condition D) then (yes)
        :Text 4;
    else (nothing)
        :Text else;
    endif
    stop
    ]]></item>
    <item name="Repeat loop"><![CDATA[
    start

    repeat
        :read data;
        :generate diagrams;
    repeat while (more data?)

    stop
    ]]></item>
    <item name="While loop 1"><![CDATA[
    start

    while (data available?)
        :read data;
        :generate diagrams;
    endwhile

    stop
    ]]></item>
    <item name="While loop 2"><![CDATA[
    while (check filesize ?) is (not empty)
    :read file;
    endwhile (empty)
    :close file;
    ]]></item>
    <item name="Parallel processing"><![CDATA[
    start

    if (multiprocessor?) then (yes)
    fork
      :Treatment 1;
    fork again
      :Treatment 2;
    end fork
    else (monoproc)
    :Treatment 1;
    :Treatment 2;
    endif
    ]]></item>
    <item name="Notes"><![CDATA[
    start
    :foo1;
    note left: This is a note
    :foo2;
    note right #green
    This note is on several
    //lines// and can
    contain <b>HTML</b>
    ====
    * Calling the method ""foo()"" is prohibited
    end note
    stop
    ]]></item>
    <item name="Title and Legend"><![CDATA[
    title this is my title
    if (condition?) then (yes)
    :yes;
    else (no)
    :no;
    note right
      this is a note
    end note
    endif
    stop

    legend
    this is the legend
    endlegend

    footer dummy footer
    header
    this is
    a long __dummy__ header
    end header
    ]]></item>
    <item name="Colors"><![CDATA[
    start
    :starting progress;
    #HotPink:reading configuration files
    These files should edited at this point!;
    #AAAAAA:ending of the process;
    ]]></item>
    <item name="Arrows"><![CDATA[
    :foo1;
    -> You can put text on arrows;
    if (test) then
    -[#blue]->
    :foo2;
    -[#green]-> The text can
    also be on several lines
    and **very** long...;
    :foo3;
    else
    -[#black]->
    :foo4;
    endif
    -[#gray]->
    :foo5;
    ]]></item>
    <item name="Grouping"><![CDATA[
    start
    partition Initialization {
      :read config file;
      :init internal variable;
    }
    partition Running {
      :wait for user interaction;
      :print information;
    }

    stop
    ]]></item>
    <item name="Swimlanes"><![CDATA[
    |Swimlane1|
    start
    :foo1;
    |#AntiqueWhite|Swimlane2|
    :foo2;
    :foo3;
    |Swimlane1|
    :foo4;
    |Swimlane2|
    :foo5;
    stop
    ]]></item>
    <item name="Formatted Swimlanes"><![CDATA[
    skinparam SwimlaneTitleFontColor red
    skinparam SwimlaneTitleFontSize 18
    skinparam SwimlaneBorderColor blue
    skinparam SwimlaneBorderThickness 5
    |lane1|
    :foo;
    |lane2|
    :bar;
    ]]></item>
    <item name="Detach"><![CDATA[
    :start;
    fork
    :foo1;
    :foo2;
    fork again
    :foo3;
    detach
    endfork
    if (foo4) then
    :foo5;
    detach
    endif
    :foo6;
    detach
    :foo7;
    stop
    ]]></item>
    <item name="SDL"><![CDATA[
    :Ready;
    :next(o)|
    :Receiving;
    split
     :nak(i)<
     :ack(o)>
    split again
     :ack(i)<
     :next(o)
     on several line|
     :i := i + 1]
     :ack(o)>
    split again
     :err(i)<
     :nak(o)>
    split again
     :foo/
    split again
     :i > 5}
    stop
    end split
    :finish;
    ]]></item>
    <item name="Complete example"><![CDATA[
    start
    :ClickServlet.handleRequest();
    :new page;
    if (Page.onSecurityCheck) then (true)
      :Page.onInit();

    if (isForward?) then (no)
      :Process controls;
      if (continue processing?) then (no)
        stop
      endif

      if (isPost?) then (yes)
        :Page.onPost();
      else (no)
        :Page.onGet();
      endif
      :Page.onRender();
    endif
    else (false)
    endif

    if (do redirect?) then (yes)
      :redirect process;
    else
    if (do forward?) then (yes)
      :Forward request;
    else (no)
      :Render page template;
    endif
    endif

    stop
    ]]></item>
  </assistant>
  <assistant name="State Diagram">
    <item name="Simple State"><![CDATA[
    [*] --> State1
    State1 --> [*]
    State1 : this is a string
    State1 : this is another string

    State1 -> State2
    State2 --> [*]
    ]]></item>
    <item name="Composite state"><![CDATA[
    scale 350 width
    [*] --> NotShooting

    state NotShooting {
      [*] --> Idle
      Idle --> Configuring : EvConfig
      Configuring --> Idle : EvConfig
    }

    state Configuring {
      [*] --> NewValueSelection
      NewValueSelection --> NewValuePreview : EvNewValue
      NewValuePreview --> NewValueSelection : EvNewValueRejected
      NewValuePreview --> NewValueSelection : EvNewValueSaved

      state NewValuePreview {
         State1 -> State2
      }

    }
    ]]></item>
    <item name="Long name"><![CDATA[
    scale 600 width

    [*] -> State1
    State1 --> State2 : Succeeded
    State1 --> [*] : Aborted
    State2 --> State3 : Succeeded
    State2 --> [*] : Aborted
    state State3 {
      state "Accumulate Enough Data\nLong State Name" as long1
      long1 : Just a test
      [*] --> long1
      long1 --> long1 : New Data
      long1 --> ProcessData : Enough Data
    }
    State3 --> State3 : Failed
    State3 --> [*] : Succeeded / Save Result
    State3 --> [*] : Aborted
    ]]></item>
    <item name="Concurrent state"><![CDATA[
    scale 800 width

    [*] --> Active

    state Active {
      [*] -> NumLockOff
      NumLockOff --> NumLockOn : EvNumLockPressed
      NumLockOn --> NumLockOff : EvNumLockPressed
      --
      [*] -> CapsLockOff
      CapsLockOff --> CapsLockOn : EvCapsLockPressed
      CapsLockOn --> CapsLockOff : EvCapsLockPressed
      --
      [*] -> ScrollLockOff
      ScrollLockOff --> ScrollLockOn : EvCapsLockPressed
      ScrollLockOn --> ScrollLockOff : EvCapsLockPressed
    }
    ]]></item>
    <item name="Arrow direction"><![CDATA[
    [*] -up-> First
    First -right-> Second
    Second --> Third
    Third -left-> Last
    ]]></item>
    <item name="Note 1"><![CDATA[
    [*] --> Active
    Active --> Inactive

    note left of Active : this is a short\nnote

    note right of Inactive
      A note can also
      be defined on
      several lines
    end note
    ]]></item>
    <item name="Note 2"><![CDATA[
    state foo
    note "This is a floating note" as N1
    ]]></item>
    <item name="More in notes"><![CDATA[
    [*] --> NotShooting

    state "Not Shooting State" as NotShooting {
      state "Idle mode" as Idle
      state "Configuring mode" as Configuring
      [*] --> Idle
      Idle --> Configuring : EvConfig
      Configuring --> Idle : EvConfig
    }

    note right of NotShooting : This is a note on a composite state
    ]]></item>
    <item name="Skinparam"><![CDATA[
    skinparam backgroundColor LightYellow
    skinparam state {
      StartColor MediumBlue
      EndColor Red
      BackgroundColor Peru
      BackgroundColor<<Warning>> Olive
      BorderColor Gray
      FontName Impact
    }

    [*] --> NotShooting

    state "Not Shooting State" as NotShooting {
      state "Idle mode" as Idle <<Warning>>
      state "Configuring mode" as Configuring
      [*] --> Idle
      Idle --> Configuring : EvConfig
      Configuring --> Idle : EvConfig
    }

    NotShooting --> [*]
    ]]></item>
  </assistant>
  <assistant name="Object Diagram">
    <item name="Definition of objects"><![CDATA[
    object firstObject
    object "My Second Object" as o2
    ]]></item>
    <item name="Relations between objects"><![CDATA[
    object Object01
    object Object02
    object Object03
    object Object04
    object Object05
    object Object06
    object Object07
    object Object08

    Object01 <|-- Object02
    Object03 *-- Object04
    Object05 o-- "4" Object06
    Object07 .. Object08 : some labels
    ]]></item>
    <item name="Adding fields 1"><![CDATA[
    object user

    user : name = "Dummy"
    user : id = 123
    ]]></item>
    <item name="Adding fields 2"><![CDATA[
    object user {
      name = "Dummy"
      id = 123
    }
    ]]></item>
    <item name="Emphasized text"><![CDATA[
    Alice -> Bob : hello --there--
    ... Some ~~long delay~~ ...
    Bob -> Alice : ok
    note left
    This is **bold**
    This is //italics//
    This is ""monospaced""
    This is --stroked--
    This is __underlined__
    This is ~~waved~~
    end note
    ]]></item>
    <item name="Lists"><![CDATA[
    object demo {
    * Bullet list
    * Second item
    ** Sub item
    }
    legend
    # Numbered list
    # Second item
    ## Sub item
    ## Another sub item
    # Third item
    end legend
    ]]></item>
  </assistant>
  <assistant name="Graphical Interface">
    <item name="Basic widgets" type="salt"><![CDATA[
    salt
    {
      Just plain text
      [This is my button]
      ()  Unchecked radio
      (X) Checked radio
      []  Unchecked box
      [X] Checked box
      "Enter text here   "
      ^This is a droplist^
    }
    ]]></item>
    <item name="Using Grid" type="salt"><![CDATA[
    salt
    {
      Login    | "MyName   "
      Password | "****     "
      [Cancel] | [  OK   ]
    }
    ]]></item>
    <item name="Using Grid 2" type="salt"><![CDATA[
    salt
    {+
      Login    | "MyName   "
      Password | "****     "
      [Cancel] | [  OK   ]
    }
    ]]></item>
    <item name="Using separator" type="salt"><![CDATA[
    salt
    {
      Text1
      ..
      "Some field"
      ==
      Note on usage
      ~~
      Another text
      --
      [Ok]
    }
    ]]></item>
    <item name="Tree widget 1" type="salt"><![CDATA[
    salt
    {
    {T
    + World
    ++ America
    +++ Canada
    +++ USA
    ++++ New York
    ++++ Boston
    +++ Mexico
    ++ Europe
    +++ Italy
    +++ Germany
    ++++ Berlin
    ++ Africa
    }
    }
    ]]></item>
    <item name="Tree widget 2" type="salt"><![CDATA[
    salt
    {+
    {T
    + <b>World
    ++ <color:blue>America|a|b
    +++ Canada
    +++ <color:red>USA
    ++++ <i>New York
    ++++ <u>Boston
    +++ ~~Mexico~~
    ++ <color:green>Europe|x|y
    +++ Italy
    +++ Germany
    ++++ Berlin
    ++ Africa
    }
    }
    ]]></item>
    <item name="Enclosing brackets" type="salt"><![CDATA[
    salt
    {
    Name         | "                 "
    Modifiers:   | { (X) public | () default | () private | () protected
              [] abstract | [] final   | [] static }
    Superclass:  | { "java.lang.Object " | [Browse...] }
    }
    ]]></item>
    <item name="Adding tabs" type="salt"><![CDATA[
    salt
    {+
    {/ <b>General | Fullscreen | Behavior | Saving }
    {
          { Open image in: | ^Smart Mode^ }
          [X] Smooth images when zoomed
          [X] Confirm image deletion
          [ ] Show hidden images
    }
    [Close]
    }
    ]]></item>
    <item name="Adding Tabs 2" type="salt"><![CDATA[
    salt
    {+
    {/ <b>General
    Fullscreen
    Behavior
    Saving } |
    {
          { Open image in: | ^Smart Mode^ }
          [X] Smooth images when zoomed
          [X] Confirm image deletion
          [ ] Show hidden images
          [Close]
    }
    }
    ]]></item>
    <item name="Using menu" type="salt"><![CDATA[
    salt
    {+
    {* File | Edit | Source | Refactor }
    {/ General | Fullscreen | Behavior | Saving }
    {
          { Open image in: | ^Smart Mode^ }
          [X] Smooth images when zoomed
          [X] Confirm image deletion
          [ ] Show hidden images
    }
    [Close]
    }
    ]]></item>
    <item name="Using menu 2" type="salt"><![CDATA[
    salt
    {+
    {* File | Edit | Source | Refactor
    Refactor | New | Open File | - | Close | Close All }
    {/ General | Fullscreen | Behavior | Saving }
    {
          { Open image in: | ^Smart Mode^ }
          [X] Smooth images when zoomed
          [X] Confirm image deletion
          [ ] Show hidden images
    }
    [Close]
    }
    ]]></item>
    <item name="Advanced table" type="salt"><![CDATA[
    salt
    {#
    . | Column 2 | Column 3
    Row header 1 | value 1 | value 2
    Row header 2 | A long cell | *
    }
    ]]></item>
    <item name="Using grid" type="salt"><![CDATA[
    salt
    {#
    [Draw grid lines with] | ! + - #

    <&person> Login | "MyName   "
    <&key> Password | "****     "
    [Cancel <&circle-x>] | [OK <&account-login>]
    }
    ]]></item>
    <item name="OpenIconic Icons" type="salt"><![CDATA[
    listopeniconic
    ]]></item>
  </assistant>
  <assistant name="Graphviz Dot (SVG only)">
    <item name="Digraph" type="dot"><![CDATA[
        digraph foo {
          node [style=rounded]
          node1 [shape=box]
          node2 [fillcolor=yellow, style="rounded,filled", shape=diamond]
          node3 [shape=record, label="{ a | b | c }"]

          node1 -> node2 -> node3
        }
    ]]></item>
    <item name="Graph" type="dot"><![CDATA[
        graph foo {
          node [style=rounded]
          node1 [shape=box]
          node2 [fillcolor=yellow, style="rounded,filled", shape=diamond]
          node3 [shape=record, label="{ a | b | c }"]

          node1 -- node2 -- node3
        }
    ]]></item>
    <item name="Fancy graph" type="dot"><![CDATA[
      digraph G {
        size ="4,4";
        main [shape=box];   /* this is a comment */
        main -> parse [weight=8];
        parse -> execute;
        main -> init [style=dotted];
        main -> cleanup;
        execute -> { make_string; printf}
        init -> make_string;
        edge [color=red];   // so is this
        main -> printf [style=bold,label="100 times"];
        make_string [label="make a\nstring"];
        node [shape=box,style=filled,color=".7 .3 1.0"];
        execute -> compare;
      }
    ]]></item>
    <item name="Binary search tree using records" type="dot"><![CDATA[
      digraph g {
        node [shape = record,height=.1];
        node0[label = "<f0> |<f1> G|<f2> "];
        node1[label = "<f0> |<f1> E|<f2> "];
        node2[label = "<f0> |<f1> B|<f2> "];
        node3[label = "<f0> |<f1> F|<f2> "];
        node4[label = "<f0> |<f1> R|<f2> "];
        node5[label = "<f0> |<f1> H|<f2> "];
        node6[label = "<f0> |<f1> Y|<f2> "];
        node7[label = "<f0> |<f1> A|<f2> "];
        node8[label = "<f0> |<f1> C|<f2> "];
        "node0":f2 -> "node4":f1;
        "node0":f0 -> "node1":f1;
        "node1":f0 -> "node2":f1;
        "node1":f2 -> "node3":f1;
        "node2":f2 -> "node8":f1;
        "node2":f0 -> "node7":f1;
        "node4":f2 -> "node6":f1;
        "node4":f0 -> "node5":f1;
      }
    ]]></item>
    <item name="Records with nested fields" type="dot"><![CDATA[
      digraph structs {
        node [shape=record];
        struct1 [shape=record,label="<f0> left|<f1> middle|<f2> right"];
        struct2 [shape=record,label="<f0> one|<f1> two"];
        struct3 [shape=record,label="hello\nworld |{ b |{c|<here> d|e}| f}| g | h"];
        struct1:f1 -> struct2:f0;
        struct1:f2 -> struct3:here;
      }
    ]]></item>
    <item name="Graph with edges on clusters" type="dot"><![CDATA[
    digraph G {
      compound=true;
      subgraph cluster0 {
        a -> b;
        a -> c;
        b -> d;
        c -> d;
      }
      subgraph cluster1 {
        e -> g;
        e -> f;
      }
      b -> f [lhead=cluster1];
      d -> e;
      c -> g [ltail=cluster0,
      lhead=cluster1];
      c -> e [ltail=cluster0];
      d -> h;
    }
    ]]></item>
    <item name="Process diagram with clusters" type="dot"><![CDATA[
    digraph G {
      subgraph cluster0 {
        node [style=filled,color=white];
        style=filled;
        color=lightgrey;
        a0 -> a1 -> a2 -> a3;
        label = "process #1";
      }
      subgraph cluster1 {
        node [style=filled];
        b0 -> b1 -> b2 -> b3;
        label = "process #2";
        color=blue
      }
      start -> a0;
      start -> b0;
      a1 -> b3;
      b2 -> a3;
      a3 -> a0;
      a3 -> end;
      b3 -> end;
      start [shape=Mdiamond];
      end [shape=Msquare];
    }
    ]]></item>
  </assistant>
  <assistant name="Ditaa (PNG only)">
    <item name="Example 1" type="ditaa"><![CDATA[
      ditaa
      +--------+   +-------+    +-------+
      |        +---+ ditaa +--> |       |
      |  Text  |   +-------+    |diagram|
      |Document|   |!magic!|    |       |
      |     {d}|   |       |    |       |
      +---+----+   +-------+    +-------+
          :                         ^
          |       Lots of work      |
          +-------------------------+
    ]]></item>
    <item name="Example 2" type="ditaa"><![CDATA[
      ditaa
      +------+   +-----+   +-----+   +-----+
      |{io}  |   |{d}  |   |{s}  |   |cBLU |
      | Foo  +---+ Bar +---+ Baz +---+ Moo |
      |cRED  |   |cGRE |   |cYEL |   |     |
      +------+   +-----+   +-----+   +-----+
                              |
                 /-----\      |      +------+
                 | cF0F|      |      | c1AB |
                 | Goo +------+---=--+ Shoo |
                 \-----/             |      |
                                     +------+
    ]]></item>
    <item name="Example with options" type="ditaa"><![CDATA[
        ditaa --no-separation --no-shadows
        +----------------------------+
        | You can add the following  |
        | Options to the first line: |
        +----------------------------+
        | --no-separation or -E      |
        +----------------------------+
        | --no-shadows    or -S      |
        +----------------------------+
    ]]></item>
    <item name="Round corners" type="ditaa"><![CDATA[
      ditaa
      /--+
      |  |
      +--/
    ]]></item>
    <item name="Color" type="ditaa"><![CDATA[
      ditaa
      /----\ /----\
      |c33F| |cC02|
      |    | |    |
      \----/ \----/

      /----\ /----\
      |c1FF| |c1AB|
      |    | |    |
      \----/ \----/
    ]]></item>
    <item name="Color codes" type="ditaa"><![CDATA[
      ditaa
      /-------------+-------------\
      |cRED RED     |cBLU BLU     |
      +-------------+-------------+
      |cGRE GRE     |cPNK PNK     |
      +-------------+-------------+
      |cBLK BLK     |cYEL YEL     |
      \-------------+-------------/
    ]]></item>
    <item name="Tags" type="ditaa"><![CDATA[
      ditaa
      +--------+
      |Document|
      |{d}     |
      |        |
      +--------+

      +--------+
      |Storage |
      |{s}     |
      |        |
      +--------+

      +--------+
      |        |
      |{tr}    |
      |        |
      +--------+

      +------+   +-------------------+
      |{o}   |   |{o}                |
      |Circle|   |        Oval       |
      |      |   |                   |
      +------+   +-------------------+

      +--------+
      |        |
      |{mo}    |
      |        |
      +--------+

      +------------+
      |{io}        |
      |Input/Output|
      |            |
      +------------+

      +---------+
      |{c}      |
      |Condition|
      |         |
      +---------+
    ]]></item>
    <item name="Dashed lines" type="ditaa"><![CDATA[
      ditaa
      ----+  /----\  +----+
          :  |    |  :    |
          |  |    |  |{s} |
          v  \-=--+  +----+
    ]]></item>
    <item name="Point markers" type="ditaa"><![CDATA[
      ditaa
      *----*
      |    |      /--*
      *    *      |
      |    |  -*--+
      *----*
    ]]></item>
    <item name="Text handling" type="ditaa"><![CDATA[
      ditaa
      /-----------------\
      | Things to do    |
      | cGRE            |
      | o Cut the grass |
      | o Buy jam       |
      | o Fix car       |
      | o Make website  |
      \-----------------/
    ]]></item>
    <item name="Process" type="ditaa"><![CDATA[
      ditaa
      +-----------------------------------------+
      |                   +-------------------+ |
      | +--------+        |    Warehouse A    | |
      | |Prepare |        |-------------------| |
      | |manifest+------->|                   | |
      | |document|        | Pack for dispatch | |
      | +--------+        |                   | |
      |                   +-------------------+ |
      +-----------------------------------------+
    ]]></item>
    <item name="Complex Example 1" type="ditaa"><![CDATA[
        ditaa
            +-----------+        +---------+
            |    PLC    |        |         |
            |  Network  +<------>+   PLC   +<---=---------+
            |    cRED   |        |  c707   |              |
            +-----------+        +----+----+              |
                                      ^                   |
                                      |                   |
                                      |  +----------------|-----------------+
                                      |  |                |                 |
                                      v  v                v                 v
              +----------+       +----+--+--+      +-------+---+      +-----+-----+       Windows clients
              |          |       |          |      |           |      |           |      +----+      +----+
              | Database +<----->+  Shared  +<---->+ Executive +<-=-->+ Operator  +<---->|cYEL| . . .|cYEL|
              |   c707   |       |  Memory  |      |   c707    |      | Server    |      |    |      |    |
              +--+----+--+       |{d} cGRE  |      +------+----+      |   c707    |      +----+      +----+
                 ^    ^          +----------+             ^           +-------+---+
                 |    |                                   |
                 |    +--------=--------------------------+
                 v
        +--------+--------+
        |                 |
        | Millwide System |            -------- Data ---------
        | cBLU            |            --=----- Signals ---=--
        +-----------------+
      ]]>
      <notes>Communication diagram from web.</notes>
    </item>
    <item name="Complex Example 2" type="ditaa"><![CDATA[
        ditaa
                         +------------+   +------------+        +------------+     +------------+
                         | Teams      |   | Group cCCC |-+      | Mujina IdP |     | SAML2 IdP  |-+
                         | & Grouper  |   | Provider   | |      | cYEL       |     | cYEL       | |
                         |       cCCC |   |            | :      |            |     |            | :
                         ++-----+-----+   +-----+------+ |      +-----+------+     +------+-----+ |
                          ^      ^ Grouper    : ^        |            ^                :  ^       |
                    SAML2 |      | API        +-|--------+            |                +--|-------+
                          |      +------+-------+ VOOT/ Oauth         +---------+---------+
                          |             |         Basic Auth                    |
                          |             |                                       | SAML2
        /--------------------\          |                                       |               /----------------------\
        | Manage             |          v                                       v               | Service Registry     |
        |        +---------+ |   +------+------+                    +-----------+-----------+   |  +---------+         |
        |        | {s}     | |   | API         |                    | Engine                |   |  | {s}     |         |
        |   +--->+ Config  +<--->+             |                    |                       +<---->+ Config  +<---+    :
        :   |    | DB cBLU | |   |             |                    | cPNK                  |   |  | DB cBLU |    |    |
        |   |    +---------+ |   |  +----------+                    |       +---------------+   |  +---------+    |    |
        |   |                :   |  | ACL cGRE |                    |       | WAYF     cGRE |   |                 |    |
        |   v                |   |  +----------+                    |       +---------------+   :                 v    |
        |+--+--------------+ |   |  | ARP cGRE |                    |       | ACL      cGRE |   |  +--------------+--+ |
        ||            cPNK | |   |  +----------+                    |       +---------------+   |  | REST       cPNK | |
        || Management      | |   |             |                    |       | Consent  cGRE |   |  | Management      | |
        || GUI             | |   | Group Proxy +<-------+           |       +---------------+   |  | GUI & API       | |
        ||                 | |   |  cPNK       |        |           |       | ARP/AM   cGRE |   |  |                 | |
        ||                 | |   |     +-------+        |           |       +---------------+   |  |                 | |
        ||                 | |   |     | OAuth +        |           |                       +<---->+                 | |
        ||                 | |   |     | cPNK  |        | VOOT/     | SAML Proxy            |   |  |                 | |
        |+----+--------+---+ |   +--+--+---+---+        | OAuth     +------------+----------+   |  +-----------------+ |
        |                    |      ^      ^            |                        ^              :                      |
        \-----------+--------/      |      |            v                        |              \-----+----------------/
                    ^     |         |      |      +-----+------+                 |                    ^
                    |     |   VOOT/ |      |      | SAML2 SP 1 |                 |                    |
                    |     |   OAuth |      |      | cRED       |                 |                    |
                    |     |         |      |      +-----+------+                 |                    |
                    |     |         |      |            ^                        |                    |
                    |     |         |      |            |                        |                    |
                    |     |         |      |            v                        |                    |
                    +-----+----------------+------+-----+------------+-----------+--------------------+
                                    |             ^                  ^                 SAML2
                                    |             |                  |
                                    |             v                  v
                                    |       +-----+-----+      +-----+-----+
                                    |       | SAML SP 2 |      | SAML SP 3 |
                                    |       | cRED      |      | cRED      |
                                    v       +-----------+      +-----------+
                              +-----+----+
                              | VOOT     |
                              | App cRED |
                              +----------+
      ]]>
      <notes>Architecture diagram from web.</notes>
    </item>
    <item name="Castle" type="ditaa"><![CDATA[
      ditaa
      /--\/--\/--\
      |  ||  ||  |
      |  ++  ++  |
      \\  cDB6  //
       | /----\ |
       | |c733| |
       +-+----+-+
    ]]></item>
  </assistant>
  <assistant name="JCCKit (PNG only)">
    <item name="Example 1" type="jcckit"><![CDATA[
      jcckit(600,300)
      data/curves = curve2 errors2 curve1 errors1
      data/curve1/title = curve 1
      data/curve1/x = 0.02 0.11  0.18  0.3   0.42  0.49 0.61
      data/curve1/y = 0.68 0.61  0.52  0.41  0.27  0.21 0.11
      data/errors1/x = 0.021 0.01  0.017 0.024 0.023 0.025 0.027
      data/errors1/y = 0.034 0.028 0.031 0.039 0.03  0.032 0.041
      data/curve2/title = curve 2
      data/curve2/x = 0.4   0.5  0.6   0.7   0.8   0.9
      data/curve2/y = 0.17  0.29 0.45  0.61  0.64  0.66
      data/errors2/x = 0 0 0 0 0 0
      data/errors2/y = 0.05 0.036 0.059 0.07 0.061 0.053

      background = #eeeeee

      defaultCoordinateSystem/ticLabelAttributes/fontSize = 0.03
      defaultCoordinateSystem/axisLabelAttributes/fontSize = 0.04
      defaultCoordinateSystem/axisLabelAttributes/fontStyle = bold
      plot/coordinateSystem/xAxis/ = defaultCoordinateSystem/
      plot/coordinateSystem/xAxis/minimum =     0.1
      plot/coordinateSystem/yAxis/ = defaultCoordinateSystem/

      plot/initialHintForNextCurve/className = jcckit.plot.PositionHint
      plot/initialHintForNextCurve/origin = 0.06 0.1
      #plot/initialHintForNextCurve/position = 0 0
      plot/curveFactory/definitions = cdef1 edef1 cdef2 edef2
      plot/curveFactory/cdef1/symbolFactory/className = jcckit.plot.ErrorBarFactory
      plot/curveFactory/edef1/symbolFactory/className = jcckit.plot.ErrorBarFactory
      plot/curveFactory/edef1/symbolFactory/attributes/className = jcckit.graphic.ShapeAttributes
      plot/curveFactory/edef1/symbolFactory/attributes/fillColor = #00cafe
      plot/curveFactory/edef1/symbolFactory/attributes/lineColor = 0
      plot/curveFactory/edef1/symbolFactory/size = 0.01
      plot/curveFactory/edef1/withLine = false
      plot/curveFactory/edef1/softClipping = false
      plot/curveFactory/cdef2/symbolFactory/className = jcckit.plot.ErrorBarFactory
      plot/curveFactory/cdef2/symbolFactory/symbolFactory/className = jcckit.plot.SquareSymbolFactory
      plot/curveFactory/cdef2/symbolFactory/symbolFactory/attributes/className = jcckit.graphic.ShapeAttributes
      plot/curveFactory/cdef2/symbolFactory/symbolFactory/attributes/fillColor = #0040c0
      plot/curveFactory/cdef2/symbolFactory/symbolFactory/attributes/lineColor =
      plot/curveFactory/edef2/ = plot/curveFactory/edef1/
      plot/curveFactory/edef2/symbolFactory/attributes/fillColor =
      plot/curveFactory/edef2/symbolFactory/attributes/lineColor = 0
      plot/curveFactory/edef2/symbolFactory/size = 0
    ]]></item>
    <item name="Example 2" type="jcckit"><![CDATA[
      jcckit(600,300)
      data/common/x = 1995 1996 1997 1998 1999 2000 2001 2002
      data/curves = kosovo putin
      data/kosovo/ = data/common/
      data/kosovo/title = Kosovo
      data/kosovo/y = 15 15 17 89 479 167 156 105
      data/putin/title = Putin
      data/putin/ = data/common/
      data/putin/y = 0 0 0 0 21 91 77 65
      background = #eeeeee
      plot/initialHintForNextCurve/className = jcckit.plot.PositionHint
      plot/initialHintForNextCurve/position = -0.01 0.1
      defaultAxisParameters/ticLabelFormat = %d
      defaultAxisParameters/ticLabelAttributes/fontSize = 0.03
      defaultAxisParameters/axisLabelAttributes/fontSize = 0.04
      defaultAxisParameters/axisLabelAttributes/fontStyle = bold
      plot/coordinateSystem/xAxis/ = defaultAxisParameters/
      plot/coordinateSystem/xAxis/axisLabel = year
      plot/coordinateSystem/xAxis/minimum = 1994.5
      plot/coordinateSystem/xAxis/maximum = 2002.5
      plot/coordinateSystem/xAxis/minimumTic = 1995
      plot/coordinateSystem/xAxis/maximumTic = 2002
      plot/coordinateSystem/yAxis/ = defaultAxisParameters/
      plot/coordinateSystem/yAxis/axisLabel = number of articles
      plot/coordinateSystem/yAxis/maximum = 500
      plot/coordinateSystem/yAxis/grid = true
      defaultCurveDefinition/symbolFactory/className = jcckit.plot.BarFactory
      defaultCurveDefinition/symbolFactory/size = 0.02
      defaultCurveDefinition/symbolFactory/attributes/className = jcckit.graphic.BasicGraphicAttributes
      defaultCurveDefinition/symbolFactory/attributes/lineColor = 0
      defaultCurveDefinition/withLine = false
      plot/curveFactory/definitions = 1 2
      plot/curveFactory/1/ = defaultCurveDefinition/
      plot/curveFactory/1/symbolFactory/attributes/fillColor = Chocolate
      plot/curveFactory/2/ = defaultCurveDefinition/
      plot/curveFactory/2/symbolFactory/attributes/fillColor = #ffca00
    ]]></item>
    <item name="Example 3" type="jcckit"><![CDATA[
      jcckit(600,300)
      data/curves = curve1 curve2 curve3
      data/curve1/title = curve 1
      data/curve1/x = 0.2 0.3 0.4 0.5
      data/curve1/y = 0.3 0.1  0.2 0.35
      data/curve2/title = curve 2
      data/curve2/x = 0.2  0.3 0.4 0.5 0.6 0.7 0.8
      data/curve2/y = 0.25 0.6 0.4 0.6 0.5 0.3 0
      data/curve3/title = curve 3
      data/curve3/x = 0.5  0.6  0.7  0.8  0.9
      data/curve3/y = 0.55 0.54 1.65 0.35 0.73
      paper = 0 0 1 0.6
      background = #eeeeee
      plot/initialHintForNextCurve/className = jcckit.plot.PositionHint
      plot/initialHintForNextCurve/position = 0 0.1
      plot/coordinateSystem/origin = 0.05 0.1
      plot/coordinateSystem/xAxis/axisLabel = <x>
      plot/coordinateSystem/xAxis/grid = true
      plot/coordinateSystem/xAxis/gridAttributes/lineColor = #808080
      plot/coordinateSystem/xAxis/automaticTicCalculation = false
      plot/coordinateSystem/xAxis/numberOfTics = 6
      plot/coordinateSystem/xAxis/ticLabelAttributes/fontSize = 0.03
      plot/coordinateSystem/xAxis/axisLabelAttributes/fontSize = 0.05
      plot/coordinateSystem/xAxis/axisLabelAttributes/textColor = #0000aa
      plot/coordinateSystem/yAxis/axisLabel = factor
      plot/coordinateSystem/yAxis/axisLabelPosition = 0.85 0.1
      plot/coordinateSystem/yAxis/axisLabelAttributes/fontSize = 0.05
      plot/coordinateSystem/yAxis/axisLabelAttributes/textColor = #0000ee
      plot/coordinateSystem/yAxis/axisLabelAttributes/verticalAnchor = top
      plot/coordinateSystem/yAxis/ticLength = -0.006
      plot/coordinateSystem/yAxis/ticLabelPosition = 0.81 0
      plot/coordinateSystem/yAxis/ticLabelAttributes/fontSize = 0.03
      plot/coordinateSystem/yAxis/ticLabelAttributes/fontStyle = bold
      plot/coordinateSystem/yAxis/ticLabelAttributes/horizontalAnchor = left
      defaultDefinition/symbolFactory/className = jcckit.plot.SquareSymbolFactory
      defaultDefinition/symbolFactory/size = 0.015
      defaultDefinition/symbolFactory/attributes/className = jcckit.graphic.BasicGraphicAttributes
      defaultDefinition/symbolFactory/attributes/lineColor = 0
      defaultDefinition/symbolFactory/attributes/lineThickness = 0.002
      defaultDefinition/lineAttributes/className = jcckit.graphic.ShapeAttributes
      defaultDefinition/lineAttributes/linePattern = 0.01 0.005
      defaultDefinition/lineAttributes/lineThickness = 0.005
      defaultDefinition/lineAttributes/lineColor = #0000ca
      plot/curveFactory/definitions = def1 def2 def3
      plot/curveFactory/def1/ = defaultDefinition/
      plot/curveFactory/def1/symbolFactory/className = jcckit.plot.BarFactory
      plot/curveFactory/def1/symbolFactory/size = 0.03
      plot/curveFactory/def1/symbolFactory/attributes/fillColor = #ffca00
      plot/curveFactory/def1/withLine = false
      plot/curveFactory/def2/ = defaultDefinition/
      plot/curveFactory/def2/symbolFactory/className = jcckit.plot.CircleSymbolFactory
      plot/curveFactory/def2/symbolFactory/attributes/fillColor = #008000
      plot/curveFactory/def2/symbolFactory/attributes/lineColor =
      plot/curveFactory/def3/ = defaultDefinition/
      plot/legend/upperRightCorner = 0.84 0.54
      plot/legend/boxAttributes/fillColor = #eeeeee
      plot/legend/lineLength = 0.035
    ]]></item>
    <item name="Example 4" type="jcckit"><![CDATA[
      jcckit(600,300)
      data/curves = c1 c2 c3
      data/c1/y = 1998 1999 2000 2001 2002
      data/c1/x = 31 32 44 61 55
      data/c2/y = 1998 1999 2000 2001 2002
      data/c2/x = 54 59 50 31 38
      data/c3/y = 1998 1999 2000 2001 2002
      data/c3/x = 15  9  6  8  7
      background = #eeeeee
      defaultCoordinateSystem/ticLabelFormat = %d
      defaultCoordinateSystem/ticLabelAttributes/fontSize = 0.03
      defaultCoordinateSystem/axisLabelAttributes/fontSize = 0.04
      defaultCoordinateSystem/axisLabelAttributes/fontStyle = bold
      plot/coordinateSystem/xAxis/ = defaultCoordinateSystem/
      plot/coordinateSystem/xAxis/axisLabel =
      plot/coordinateSystem/xAxis/ticLabelFormat = %d%%
      plot/coordinateSystem/xAxis/grid = true
      plot/coordinateSystem/xAxis/minimum = 0
      plot/coordinateSystem/xAxis/maximum = 100
      plot/coordinateSystem/yAxis/ = defaultCoordinateSystem/
      plot/coordinateSystem/yAxis/axisLabel = year
      plot/coordinateSystem/yAxis/minimum = 2002.5
      plot/coordinateSystem/yAxis/maximum = 1997.5
      plot/initialHintForNextCurve/className = jcckit.plot.PositionHint
      plot/initialHintForNextCurve/position = 0.15 0
      defaultDefinition/symbolFactory/className = jcckit.plot.BarFactory
      defaultDefinition/symbolFactory/stacked = true
      defaultDefinition/symbolFactory/size = 0.07
      defaultDefinition/symbolFactory/horizontalBars = true
      defaultDefinition/symbolFactory/attributes/className = jcckit.graphic.BasicGraphicAttributes
      defaultDefinition/symbolFactory/attributes/lineColor = 0
      defaultDefinition/withLine = false
      plot/curveFactory/definitions = def1 def2 def3
      plot/curveFactory/def1/ = defaultDefinition/
      plot/curveFactory/def1/symbolFactory/attributes/fillColor = #00caff
      plot/curveFactory/def2/ = defaultDefinition/
      plot/curveFactory/def2/symbolFactory/attributes/fillColor = #ffca00
      plot/curveFactory/def3/ = defaultDefinition/
      plot/curveFactory/def3/symbolFactory/attributes/fillColor = #a0ff80
      plot/legendVisible = false
    ]]></item>
    <item name="Example 5" type="jcckit"><![CDATA[
      jcckit(600,300)
      data/curves = n125 n250 n500
      data/common/y = 1 0.998 0.996 0.994 0.992 0.99 0.988 0.986 0.984 0.982 0.98 0.978 0.976 0.974 0.972 0.97 0.968 0.966 0.964 0.962 0.96 0.958 0.956 0.954 0.952 0.95 0.948 0.946 0.944 0.942 0.94 0.938 0.936 0.934 0.932 0.93 0.928 0.926 0.924 0.922 0.92 0.918 0.916 0.914 0.912 0.91 0.908 0.906 0.904 0.902 0.9 0.898 0.896 0.894 0.892 0.89 0.888 0.886 0.884 0.882 0.88 0.878 0.876 0.874 0.872 0.87 0.868 0.866 0.864 0.862 0.86 0.858 0.856 0.854 0.852 0.85 0.848 0.846 0.844 0.842 0.84 0.838 0.836 0.834 0.832 0.83 0.828 0.826 0.824 0.822 0.82 0.818 0.816 0.814 0.812 0.81 0.808 0.806 0.804 0.802 0.8 0.798 0.796 0.794 0.792 0.79 0.788 0.786 0.784 0.782 0.78 0.778 0.776 0.774 0.772 0.77 0.768 0.766 0.764 0.762 0.76 0.758 0.756 0.754 0.752 0.75 0.748 0.746 0.744 0.742 0.74 0.738 0.736 0.734 0.732 0.73 0.728 0.726 0.724 0.722 0.72 0.718 0.716 0.714 0.712 0.71 0.708 0.706 0.704 0.702 0.7 0.698 0.696 0.694 0.692 0.69 0.688 0.686 0.684 0.682 0.68 0.678 0.676 0.674 0.672 0.67 0.668 0.666 0.664 0.662 0.66 0.658 0.656 0.654 0.652 0.65 0.648 0.646 0.644 0.642 0.64 0.638 0.636 0.634 0.632 0.63 0.628 0.626 0.624 0.622 0.62 0.618 0.616 0.614 0.612 0.61 0.608 0.606 0.604 0.602 0.6 0.598 0.596 0.594 0.592 0.59 0.588 0.586 0.584 0.582 0.58 0.578 0.576 0.574 0.572 0.57 0.568 0.566 0.564 0.562 0.56 0.558 0.556 0.554 0.552 0.55 0.548 0.546 0.544 0.542 0.54 0.538 0.536 0.534 0.532 0.53 0.528 0.526 0.524 0.522 0.52 0.518 0.516 0.514 0.512 0.51 0.508 0.506 0.504 0.502 0.5 0.498 0.496 0.494 0.492 0.49 0.488 0.486 0.484 0.482 0.48 0.478 0.476 0.474 0.472 0.47 0.468 0.466 0.464 0.462 0.46 0.458 0.456 0.454 0.452 0.45 0.448 0.446 0.444 0.442 0.44 0.438 0.436 0.434 0.432 0.43 0.428 0.426 0.424 0.422 0.42 0.418 0.416 0.414 0.412 0.41 0.408 0.406 0.404 0.402 0.4 0.398 0.396 0.394 0.392 0.39 0.388 0.386 0.384 0.382 0.38 0.378 0.376 0.374 0.372 0.37 0.368 0.366 0.364 0.362 0.36 0.358 0.356 0.354 0.352 0.35 0.348 0.346 0.344 0.342 0.34 0.338 0.336 0.334 0.332 0.33 0.328 0.326 0.324 0.322 0.32 0.318 0.316 0.314 0.312 0.31 0.308 0.306 0.304 0.302 0.3 0.298 0.296 0.294 0.292 0.29 0.288 0.286 0.284 0.282 0.28 0.278 0.276 0.274 0.272 0.27 0.268 0.266 0.264 0.262 0.26 0.258 0.256 0.254 0.252 0.25 0.248 0.246 0.244 0.242 0.24 0.238 0.236 0.234 0.232 0.23 0.228 0.226 0.224 0.222 0.22 0.218 0.216 0.214 0.212 0.21 0.208 0.206 0.204 0.202 0.2 0.198 0.196 0.194 0.192 0.19 0.188 0.186 0.184 0.182 0.18 0.178 0.176 0.174 0.172 0.17 0.168 0.166 0.164 0.162 0.16 0.158 0.156 0.154 0.152 0.15 0.148 0.146 0.144 0.142 0.14 0.138 0.136 0.134 0.132 0.13 0.128 0.126 0.124 0.122 0.12 0.118 0.116 0.114 0.112 0.11 0.108 0.106 0.104 0.102 0.1 0.098 0.096 0.094 0.092 0.09 0.088 0.086 0.084 0.082 0.08 0.078 0.076 0.074 0.072 0.07 0.068 0.066 0.064 0.062 0.06 0.058 0.056 0.054 0.052 0.05 0.048 0.046 0.044 0.042 0.04 0.038 0.036 0.034 0.032 0.03 0.028 0.026 0.024 0.022 0.02 0.018 0.016 0.014 0.012 0.01 0.008 0.006 0.004 0.002
      data/n125/ = data/common/
      data/n125/title = N=125
      data/n125/x = 6584.52 6658.72 6820.14 6853.31 6935.06 6942.07 7038.82 7099.1 7251.71 7407.56 7625.55 7951.12 8215.6 8318.76 8373.33 8382.14 8476.49 8531.61 8636.75 8799.81 8864.75 8892.88 9060.05 9119.1 9420.1 9682.76 9896.38 10068.6 10087.4 10139.5 10270.4 10412.2 10554.8 10592.6 10624 10699.8 10742.2 10820.9 11023 11095.8 11272.4 11324.7 11368.6 11450.8 11479.1 11490.4 11963.6 12053.5 12082.2 12384.4 12486.9 12692.5 12711.2 12975.8 13436.9 13444.5 13614.1 13820.9 13826.5 13849.8 14202.2 14481.5 14566.7 14616.9 15204.5 15393.4 15562 15889.4 15952.8 16008.6 16070.9 16115.5 16224.8 16273 16339.3 16369.9 16574.6 16922.1 17039 17077.9 17101.2 17234.5 17357.1 17453.2 17522.2 17526 17691.2 17801.2 17858.5 18171.2 18282 18373.6 18550.1 18686.5 18721.9 19128.1 19264 19668.6 19777.5 19878 20259.4 20410.1 20680.2 21083 21139 21227.4 21350 21513.9 21561.8 21804.4 21936 21998.9 22036.2 22152.5 22479.6 22725.4 22789.4 22920.1 22935.2 23088.8 23300.4 23497.6 23522.8 23562.9 24151 24707 24719.6 24937.1 24973.4 25607.6 25640.1 25860.1 25906 26118.9 26168.1 26566.4 26607.8 26801.5 26827.1 27079.4 27165.1 27278.3 27597.9 27658.4 27874.4 28044.1 28238.9 28390.4 28540.5 28784.9 29264.4 29442.2 29444 29599.1 29603.8 29846 29968 29983.7 30182.2 30221.2 30224.9 30472.6 30567.9 30819.4 30884.5 30904 31040.4 31050.6 31239.2 31380 31386.9 31798.2 31823.5 32591.1 32716.3 32779.1 32790.5 32910.4 33036.1 33166.2 33341.4 33618 33732.9 33908.9 34002.5 34183.4 34275.8 35255.5 35726 35743.4 35881.8 36526.4 36694.4 36985.1 37089.2 37162.9 37176 37341.5 37390.9 38394.4 38431.5 38733.8 38984.4 39125.9 39539.1 39670 39725.6 39861.5 40219.6 40503.6 40511.2 40585.4 40625.5 40743.8 41267 41481.4 42286 42435.6 42480.9 42555.1 42850 43052.1 43402.9 43588.1 43845.1 43946.9 44161.6 44876.8 45659 45932.4 46131.6 46159.8 46558.8 46634.4 47650.1 48010.1 48540.5 48736 48794.4 48827 49768.1 49839.2 49958.1 50071.6 50126.4 50378.2 50402.4 50670.4 50935 51276.8 51595.4 51658.1 51896.9 53055.6 54138.8 54831.8 54843.2 56788 56834.9 56968 57171.6 57361.5 57374.5 57406.2 57772.4 58007.4 58500 58888.1 58904.6 58963.6 59087.5 59579.5 59823.7 59839.6 60119.6 60184.4 60195.8 60768.1 60822.4 60865.6 61057.9 62001.8 62071.2 62122.4 62733 62842.2 62999.2 63046 63670.2 63881.6 64173.6 64206.9 64406.4 65050.8 65503.2 65636.5 67458.8 67925.4 67934.1 68057.4 68334.4 68497.1 68542.4 68734 69278.2 69865 70188 70372.6 70981.4 71136 71500.4 71703.5 72679.2 73316.2 73475.2 74027 74268.9 74561.5 74563 74738.8 74832.5 75225.9 75488 75629.6 75714.4 75874.1 77396.1 77500.9 77682 78131.8 78184.6 78580.5 79175.5 79439.4 79647.9 80677.1 80751.8 81029.5 81678.1 81774.1 81964.6 81996 82640.6 82953.5 83390.9 83625.2 83676.5 84542 85016.2 86972.4 86984.1 88140.2 88480.9 88785.1 90434.8 90975.8 91634.9 93035.5 93097.6 93741.9 93761.6 94026.4 94155.2 94250 95028.6 95406.8 95695.9 98941.6 99023.4 99527.4 99710.2 100128 100289 100341 100351 100730 101026 102862 102947 103163 104223 104363 105054 105192 106132 106450 106526 108581 109347 109355 110438 112146 113344 113532 115288 116338 116460 116544 119441 120480 120484 122074 122166 123384 123670 123729 124027 124046 125254 125459 127555 129195 129556 132119 133152 133701 135440 135942 136406 136951 139060 139891 140714 142648 142871 144111 144184 144730 145202 146992 147204 147814 148468 149210 149358 149472 149531 151042 153264 154594 155161 155341 157618 160645 162851 164122 166380 166638 167339 168532 172935 173858 174115 175391 176188 176202 177530 177796 177814 179395 180070 180111 181338 182372 183509 184269 186514 187408 197445 200350 204020 206594 208107 211459 211890 212322 220300 220409 221034 231302 232664 234868 241549 251059 260118 262389 263845 263878 274204 275964 278898 282536 282860 292451 294808 307599 316119 328524 339418 388162
      data/n250/ = data/common/
      data/n250/title = N=250
      data/n250/x = 25052.2 25638.8 25638.8 25825 25908 25946.5 25995.8 26043.5 26543.2 26635 26635 26970.5 27097.3 27222.3 27269.8 27402.2 27567.2 27657.8 27701.2 27910.5 27936 28356 28845.2 28847 28875.5 29633.7 29646.5 29817.2 30046.7 30109.8 30327.5 30692 30778.3 31120 31157.5 31173.5 31173.5 31193.2 31496.2 31497.5 31594.8 31716.3 31724.5 31821.7 31821.7 32166.3 32252.7 32296.5 32437.8 32539.2 32551.8 32551.8 32582.5 32698.2 32713.2 32885 32945.8 33165 33459.8 33762.5 34631.8 35017.8 35161 35403.5 35697 35795.8 35835.2 35835.2 35883.2 36091.8 36127.5 36450.5 36450.5 36612.8 37046.8 37094 37298.5 37306.8 37327.8 37460.8 37559.8 37628 37679 37707 37834.2 38792.2 39170.8 39201.5 39461 39652.5 39747.2 40086.2 40218.5 40448.5 40549.8 40758.8 40758.8 40824 41041.2 41130.8 41212.8 41798.8 41851.8 41968.2 41968.2 42371.8 42410.8 43061 43341.2 43341.2 43537.2 43639 44051.2 44084.5 44351.8 44356.2 44356.2 44451.5 44664.8 44702 44760.8 44760.8 45075.5 45277 45277 45661.2 45908.5 45967 45967 46021 46345.8 46427.8 46550.2 46633.2 46832.2 46922 46948.8 47070 47113.8 47124 47153.2 47186 47987 48121.2 48143.5 48143.5 48643.2 48692.8 48748 48870.5 49153.8 49393.8 49720.5 50056 50317 50335 50525.5 50740.5 51830.2 51830.2 51957.2 52037.5 52050.5 52811.5 53150 53162 53254 54169 54200.5 54236.5 54286.5 56452.5 56973 57596 57691 57897 58056.5 58056.5 58108.8 58248.2 58252 58568 58612 58651.5 58651.5 59021 59221.5 59335.2 59341.5 59550.3 59644.2 59648.7 59663 60081 60225 60225 60225.8 60378.2 60424.5 60760.5 61077.5 61151 61331.2 61834.2 61941.8 61941.8 62065.5 62182.5 62861.5 63185 63691.5 64130 64421 64776.8 65450.5 65461.2 65635.2 66175 66494 66836.5 66868 66937.2 66937.2 67735.2 68008.2 68162.5 68532.5 68752.5 68978.8 69343.5 69700 70064 70083.2 70311.2 70311.2 70746 70893 71088.8 71738.2 72107.5 72163.5 72828 73894.5 73966.5 74595.8 74877.8 75251.8 75507.5 75681.2 75756.2 76808.8 76925.8 77261 77390 77390 77413.8 78120 78120 78334.2 78497 78875.8 79489.2 79979.8 82448.8 82502.5 82997.8 83109 83127.8 83709 83795.8 83804 85237.8 85851.5 85851.5 86295 86329 87062 87317.2 88189.5 88292.5 88340.8 88738.8 89554.2 89620.5 89870 90058 91497 91516.2 91650.8 91701.8 91729.2 92481.2 92500.5 92500.5 92685.5 93415 94102 94184.2 94322.5 94322.5 94338 94905 95149.2 96240.8 96577 97082 97315 97429.5 97479.5 97858.5 97895.8 98029.5 98421.5 98571.2 98683.8 98726.2 98959 99275 99713.2 99954 100318 100318 100364 100605 100621 100790 101192 101487 101641 101965 102144 102144 102676 102861 103764 104132 104176 104223 104470 104622 104635 105018 105018 105653 106433 106717 107073 107092 108392 109042 109456 110101 112154 112334 112745 113852 114175 114951 116569 117390 117736 118561 118564 119572 120399 120736 120767 121349 121843 122798 124216 124216 125102 125339 125668 125853 125985 126747 127548 127900 128823 129360 129499 129646 130097 130435 130594 130866 131167 131288 132282 133090 133361 133480 134607 134862 135476 135606 136163 136510 137384 138494 138496 138652 138900 140989 141739 142081 142873 142873 143608 144519 145308 145698 146165 147667 149006 149836 150104 150566 150850 151294 151382 151390 151441 153752 155411 156040 157726 157871 157972 157972 158720 160244 161355 163418 166184 166813 168204 168780 173618 176116 176720 180520 180520 183256 183261 185390 185506 191729 196789 198520 198520 200852 200979 203843 205418 208688 211767 211767 211996 212978 214748 216433 216433 218648 220455 224911 226875 229851 233359 234637 235389 237872 240108 241354 241507 242013 251628 251718 253265 256252 257930 258578 258860 261682 267112 270638 287892 308308 318640 328082 331238 331238 353222 353222 354208 395480 396610 438023
      data/n500/ = data/common/
      data/n500/title = N=500
      data/n500/x = 49094.1 49391.8 50160 50165 50166 50494 50718.5 50839 50943.5 51286 51432.5 51643.5 51709.5 51933.5 51945 52099.5 52610 52784 53004 53182.5 53509.5 53904.5 54030 54205.5 54770 55134.5 55334 55526 55545 55808 55809 55858 56267.5 56276 56367.5 57282 57379 57621 57931 58015 58089.5 58116 58176.5 58222.5 58808 58921 58941.5 58942 58963 58972.5 59128.5 59723 60013.5 60449 60604 60641 60673 61019 61040 61154.5 61177.5 61393.5 61463 61792.5 61880 62183.5 62738 62908.5 63089 63233.5 63268.5 63347 63420.5 63481.5 63591.5 63775 63893 64037.5 64132.5 64201 64371.5 64437.5 65012.5 65040 65601.5 65606.5 66157 66218.5 66368.5 66533 66544 66630 66767.5 66948.5 67173 67233.5 67400 67456 67523.5 67640.5 67682.5 67706.5 67731 67775.5 67802 67805 67845 67956 68094 68114 68181.5 69002 69069.5 69104 69138 69673 69930.5 70051 70083 70360.5 70454.5 70742 70926 70941 71429.5 71572 71832.5 71914 71941 72340.5 72503 72526 72652 73081 73239 73284.5 73320.5 73340.5 73347 73511.5 74233 74321 74501 74582 74586 74916.5 75170 75215 75718 76124.5 76208.5 76410 76452 76569.5 76664.5 76925.5 77139.5 77141.5 77322 77326 77601 77683.5 77743.5 77830 77842 77980.5 78021.5 78642.5 78882.5 79122.5 79312 79587 79764.5 79959 80180 80197.5 80240.5 80425.5 80598.5 80827 81302 81315 81346.5 81609 81903.5 82190.5 82387.5 82403.5 82414.5 82589.5 82606 82657 83431 83525 83802 83839 83923 84036.5 84498 84895 84997.5 85028.5 85061 85654 85828 86379.5 86573.5 86706 87186 87403.5 87755.5 87923 87961.5 87962 88016 88232.5 88271 88722 88758 89082.5 89207.5 89479 89773.5 90427 90495.5 90711 90724.5 90861 91822 92147 92294.5 92355 92372 92455 92547.5 92681.5 92688.5 92845.5 93225.5 93638 93709.5 93803 94367 94582 94678 95133.5 95464.5 95626 95659 96033 96055 96154.5 96487.5 96578.5 97162.5 97495 97552 97800.5 98543 98671.5 98691 98923 98943 99100.5 99930 100406 100479 101054 101306 101396 101416 101509 102133 102636 102735 102964 103436 103802 104606 104690 105235 105622 106101 106212 106430 107276 107306 107351 107471 109114 109222 109970 110000 110147 110235 110875 111023 111121 111221 111354 111429 111452 111744 111820 111934 111944 112742 114299 114794 115475 115649 116262 116347 116549 116933 117404 117570 117836 118420 118492 119243 119268 120464 120808 120847 121142 121618 121622 121720 121768 121780 122132 122664 123127 123312 123704 124034 124210 125836 126004 126428 127772 128310 128414 128653 128674 128864 131416 131562 131904 132002 132271 132277 132402 132760 133398 134191 135282 135951 136234 136774 136837 137418 137500 139267 139288 139380 140915 141543 141924 142461 143054 143334 144342 145360 145521 145810 146082 147390 147534 147588 148465 150082 150361 151379 151465 151601 152950 153142 154119 154271 154429 154583 154914 154926 156023 156912 157406 157874 158879 159981 160314 160430 161928 162374 162452 162612 164499 164560 164992 165160 165228 165376 165520 165848 165867 166465 166900 166954 168166 169990 170978 170998 171496 171813 172374 173904 176719 176923 177456 179998 180106 181164 181355 183188 183916 184131 184288 186048 186100 186222 186563 187229 187275 188377 188684 191733 191994 191996 192236 192444 193476 193831 195220 195590 196462 197422 197602 199020 199430 200722 204893 206007 206274 207018 207046 207712 207782 208444 211845 217766 221461 229524 230445 236852 236868 237259 241396 246234 246825 247440 249988 258617 262804 266440 268499 271422 272214 274497 280956 282820 287580 289210 290615 298834 317064 327739 338469 403420 404686
      background = #eeeeee
      defaultCoordinateSystem/grid = true
      defaultCoordinateSystem/ticLength = 0
      defaultCoordinateSystem/ticLabelAttributes/fontSize = 0.025
      defaultCoordinateSystem/ticLabelAttributes/fontStyle = bold
      defaultCoordinateSystem/axisAttributes/lineColor = 255
      defaultCoordinateSystem/axisAttributes/lineThickness = 0.002
      defaultCoordinateSystem/axisLabelAttributes/fontSize = 0.035
      defaultCoordinateSystem/axisLabelAttributes/fontStyle = bold
      plot/coordinateSystem/xAxis/ = defaultCoordinateSystem/
      plot/coordinateSystem/xAxis/minimum = 0
      plot/coordinateSystem/xAxis/maximum = 500000
      plot/coordinateSystem/xAxis/axisLabel = t N
      plot/coordinateSystem/xAxis/ticLabelFormat = %d
      plot/coordinateSystem/yAxis/ = defaultCoordinateSystem/
      plot/coordinateSystem/yAxis/minimum = 0.001
      plot/coordinateSystem/yAxis/maximum = 1
      plot/coordinateSystem/yAxis/logScale = true
      plot/coordinateSystem/yAxis/axisLabel = cummulative density
      plot/coordinateSystem/yAxis/ticLabelFormat = %0.3f
      plot/legend/boxAttributes/fillColor = #e0ffff
      plot/legend/boxAttributes/lineThickness = 0.0025
      plot/legend/titleAttributes/fontName = Serif
      plot/legend/titleAttributes/fontStyle = bold
      plot/legend/titleAttributes/fontSize = 0.02
      plot/legend/curveTitleAttributes/fontStyle = italic
      plot/legend/curveTitleAttributes/fontSize = 0.02
    ]]></item>
  </assistant>
  <assistant name="Other">
    <item name="Sprite 1"><![CDATA[
        sprite $foo1 {
        FFFFFFFFFFFFFFF
        F0123456789ABCF
        F0123456789ABCF
        F0123456789ABCF
        F0123456789ABCF
        F0123456789ABCF
        F0123456789ABCF
        F0123456789ABCF
        F0123456789ABCF
        FFFFFFFFFFFFFFF
        }
        Alice -> Bob : Testing <$foo1>
        note right
        To encode sprite, you can use the command line like:
        <i><b>java -jar plantuml.jar -encodesprite 16z foo.png</b></i>
        where foo.png if the image file you want to use (it will
        be converted to gray automatically). After -encodesprite,
        you have to specify a format: 4, 8, 16, 4z, 8z or 16z.
        The number indicates the gray level and the optionnal z
        is used to enable compression in sprite definition.
        end note
    ]]></item>
    <item name="Sprite 2"><![CDATA[
        sprite $printer [15x15/8z] NOtH3W0W208HxFz_kMAhj7lHWpa1XC716sz0Pq4MVPEWfBHIuxP3L6kbTcizR8tAhzaqFvXwvFfPEqm0
        start
        :click on <$printer> to print the page;
    ]]></item>
    <item name="Sprite 3"><![CDATA[
        sprite $bug [15x15/16z] PKzR2i0m2BFMi15p__FEjQEqB1z27aeqCqixa8S4OT7C53cKpsHpaYPDJY_12MHM-BLRyywPhrrlw3qumqNThmXgd1TOterAZmOW8sgiJafogofWRwtV3nCF
        sprite $printer [15x15/8z] NOtH3W0W208HxFz_kMAhj7lHWpa1XC716sz0Pq4MVPEWfBHIuxP3L6kbTcizR8tAhzaqFvXwvFfPEqm0
        sprite $disk {
          444445566677881
          436000000009991
          43600000000ACA1
          53700000001A7A1
          53700000012B8A1
          53800000123B8A1
          63800001233C9A1
          634999AABBC99B1
          744566778899AB1
          7456AAAAA99AAB1
          8566AFC228AABB1
          8567AC8118BBBB1
          867BD4433BBBBB1
          39AAAAABBBBBBC1
        }

        title Use of sprites (<$printer>, <$bug>...)

        class Example {
            Can have some bug : <$bug>
            Click on <$disk> to save
        }

        note left : The printer <$printer> is available
    ]]></item>
    <item name="Constants"><![CDATA[
        !define SEQUENCE (S,#aaaaaa) Database Sequence
        !define TABLE (T,#ffaaaa) Database Table

        class USER << TABLE >>
        class ACCOUNT << TABLE >>
        class UID << SEQUENCE >>

        USER "1" -- "*" ACCOUNT
        USER -> UID
    ]]></item>
    <item name="Macros 1"><![CDATA[
        !define module(x) component x <<module >>
        !define module(x,y) component x as y <<module >>

        module(foo)
        module(bar , barcode)
    ]]></item>
    <item name="Macros 2"><![CDATA[
        !define send(a,b,c) a->b : c

        send(Alice , Bob , Hello)
        send(Bob , Alice , ok)
    ]]></item>
    <item name="Macros 3"><![CDATA[
        !define DOUBLE(x) x x
        !definelong AUTHEN(x,y)
            x -> y : DOUBLE(hello)
            y -> x : ok
        !enddefinelong

        AUTHEN(Bob ,Alice)
    ]]></item>
    <item name="Conditions 1"><![CDATA[
        !define SHOW_METHODS

        class ArrayList
        !ifdef SHOW_METHODS
            ArrayList : int size ()
            ArrayList : void clear ()
        !else
            ArrayList : void foo_bar ()
        !endif
    ]]></item>
    <item name="Includes"><![CDATA[
        ' It is possible to include other files:
        !include Include.plantuml

        ' With environment variable:
        ' !include %windir%/test1.txt

        ' With constant:
        ' !define PLANTUML_HOME/home/foo
        ' !include PLANTUML_HOME/test1.txt
    ]]></item>
    <item name="Monochrome"><![CDATA[
        skinparam monochrome true

        box "Internal Service" #LightBlue
          participant Bob
          participant Alice
        end box
        participant Other

        Bob -> Alice : hello
        Alice -> Other : hello
    ]]></item>
    <item name="Handwritten"><![CDATA[
        skinparam handwritten true

        box "Internal Service" #LightBlue
          participant Bob
          participant Alice
        end box
        participant Other

        Bob -> Alice : hello
        Alice -> Other : hello
    ]]></item>
    <item name="Header and Footer"><![CDATA[
        scale 1.5
        'scale 2/3
        'scale 200 width
        'scale 200 height
        'scale 200*100

        Alice -> Bob: Authentication Request

        header
            <font color=red>Warning:</font>
            Do not use in production.
        endheader

        center footer Generated for demonstration
    ]]></item>
    <item name="Runtime variables"><![CDATA[
        object Foo
        object Bar

        Foo -> Bar

        header
            Runtime variables
        endheader

        legend
            Runtime variables will be substituted by PlantUML QEditor before image generation.

            '
            ' same on Unix and Windows:
            ' - ${USER} ${CUSER} ${USERNAME} ${CUSERNAME} %USER% %CUSER% %USERNAME% %CUSERNAME%
            ' - ${HOME} ${HOMEPATH} %HOME% %HOMEPATH%
            ' always the same:
            ' - FILE CFILE FFILE
            ' - PATH CPATH FPATH
            ' - DIR CDIR FDIR
            '
            __Default:__
            '                             Windows style
            ""Username ............. : "" %USERNAME%
            ""Path ................. : "" %PATH%
            ""Filename ............. : "" %FILE%
            ""Directory ............ : "" %DIR%
            ""Date ................. : "" %DATE%
            ""Time ................. : "" %TIME%
            ""Timestamp ............ : "" %NOW%
            ""Timestamp short....... : "" %NOW:S%
            ""Timestamp long ....... : "" %NOW:L%
            ""Formatted timestamp .. : "" %NOW:MMMM ''yy  hh:mm ap%
            __Current:__
            ' C prefix                    (Unix style)
            ""Username ............. : "" ${CUSER}
            ""Path ................. : "" ${CPATH}
            ""Filename ............. : "" ${CFILE}
            ""Directory ............ : "" ${CDIR}
            ""Date ................. : "" ${CDATE}
            ""Time ................. : "" ${CTIME}
            ""Timestamp ............ : "" ${CNOW}
            ""Timestamp short....... : "" ${CNOW:S}
            ""Timestamp long ....... : "" ${CNOW:L}
            ""Formatted timestamp .. : "" ${CNOW:MMMM ''yy  hh:mm ap}
            __File:__
            ' F prefix                    (Unix style)
            ""Username ............. : "" ${FUSER}
            ""Path ................. : "" ${FPATH}
            ""Filename ............. : "" ${FILE}
            ""Directory ............ : "" ${FDIR}
            ""Date ................. : "" ${FDATE}
            ""Time ................. : "" ${FTIME}

            See [[http://doc.qt.io/qt-5/qdatetime.html#toString]] for format informaton.

            You can use Unix like ${...} or Windows like %...% variable format!
        endlegend

        footer
            %PATH%, %USER%, %NOW:S%
        endfooter
    ]]></item>
  </assistant>
  <assistant name="PlantUML">
    <item name="Version"><![CDATA[
        version
    ]]></item>
    <item name="Check Version"><![CDATA[
        checkversion
    ]]></item>
    <item name="Test Graphviz dot"><![CDATA[
        testdot
    ]]></item>
    <item name="License"><![CDATA[
        license
    ]]></item>
    <item name="Authors"><![CDATA[
        authors
    ]]></item>
    <item name="Icons"><![CDATA[
        listopeniconic
    ]]></item>
  </assistant>
  <assistant name="PlantUML Incubation">
    <item name="Return in Sequence Diagram"><![CDATA[
        Bob -> Alice : hello
        activate Alice
        Alice -> Alice : some action
        return bye
    ]]></item>
    <item name="Shortcut syntax in sequence diagrams"><![CDATA[
        alice -> bob ++ : hello
        bob -> bob ++ : self call
        bob -> bib ++  #005500 : hello
        bob -> geoge ** : create
        return done
        return rc
        bob -> geoge !! : delete
        return success
    ]]></item>
    <item name="Autoactivation in sequence diagrams"><![CDATA[
        autoactivate on
        alice -> bob : hello
        bob -> bob : self call
        bill -> bob #005500 : hello from thread 2
        bob -> geoge ** : create
        return done in thread 2
        return rc
        bob -> geoge !! : delete
        return success
    ]]></item>
    <item name="Change line color in dtate diagrams"><![CDATA[
        State S1
        State S2
        S1 -[#DD00AA]-> S2
        S1 -left[#yellow]-> S3
        S1 -up[#red,dashed]-> S4
        S1 -right[dotted,#blue]-> S5

        X1 -[dashed]-> X2
        Z1 -[dotted]-> Z2
        Y1 -[#blue,bold]-> Y2
    ]]></item>
    <item name="Reference in dequence diagrams"><![CDATA[
        Dummy -> Alice : foo1
        ref over Alice, Dummy : [[http://www.google.com]] Foo2

        Alice -> Bob : hello

        ref over Alice, Bob
          [[http://www.google.com]]
          this is a
          reference over
          Alice and Bob
        end
    ]]></item>
    <item name="URL in diagrams"><![CDATA[
        skinparam topurl http://www.google.com
        Dog --|> Mammal
        url of Mammal is [[/search]]
        url of Dog is [[http://www.yahoo.com{This is Dog}]]
        Dog o-- Cat
        Cat --|> Mammal
    ]]></item>
    <item name="URLs on classes"><![CDATA[
        Object <|-- Foo
        class Foo {
          [[http://www.google.com]]
          + methods1() [[http://www.yahoo.com/A1{Some explainations about this method}]]
          + methods2() [[http://www.yahoo.com/A2]]
        }

        class Foo2 {
          + methods1() [[http://www.yahoo.com/B1]]
          + methods2() [[http://www.yahoo.com/B2]]
        }

        class Object {
          [[http://www.yahoo.com]]
        }
    ]]></item>
<!--
    <item name=""><![CDATA[
    ]]></item>
-->
  </assistant>
</assistants>
